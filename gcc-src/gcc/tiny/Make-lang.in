# Top level -*- makefile -*- fragment for tiny
#   Copyright (C) 2016 Free Software Foundation, Inc.

#This file is part of GCC.

#GCC is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 3, or (at your option)
#any later version.

#GCC is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# This file provides the language dependent support in the main Makefile.
# Each language makefile fragment must provide the following targets:
#
# foo.all.cross, foo.start.encap, foo.rest.encap,
# foo.install-common, foo.install-man, foo.install-info, foo.install-pdf,
# foo.install-html, foo.info, foo.dvi, foo.pdf, foo.html, foo.uninstall,
# foo.mostlyclean, foo.clean, foo.distclean,
# foo.maintainer-clean, foo.stage1, foo.stage2, foo.stage3, foo.stage4
#
# where `foo' is the name of the language.
#
# It should also provide rules for:
#
# - making any compiler driver (eg: g++)
# - the compiler proper (eg: cc1plus)
# - define the names for selecting the language in LANGUAGES.

#

GCCTINY_INSTALL_NAME := $(shell echo gcctiny|sed '$(program_transform_name)')
GCCTINY_TARGET_INSTALL_NAME := $(target_noncanonical)-$(shell echo gcctiny|sed '$(program_transform_name)')

tiny: tiny1$(exeext)

.PHONY: tiny

# Driver

GCCTINY_OBJS = \
   $(GCC_OBJS) \
   tiny/tinyspec.o \
   $(END)

gcctiny$(exeext): $(GCCTINY_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)
	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
	  $(GCCTINY_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
	  $(EXTRA_GCC_LIBS) $(LIBS)

# The compiler proper

tiny_OBJS = \
    tiny/tiny1.o \
    tiny/tiny-parser.o \
    tiny/tiny-token.o \
    tiny/tiny-lexer.o \
    tiny/tiny-symbol.o \
    tiny/tiny-symbol-mapping.o \
    tiny/tiny-scope.o \
    tiny/tiny-convert.o \
    $(END)

tiny1$(exeext): attribs.o $(tiny_OBJS) $(BACKEND) $(LIBDEPS)
	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
	      attribs.o $(tiny_OBJS) $(BACKEND) $(LIBS) $(BACKENDLIBS)

# FIXME
tiny.all.cross:

tiny.start.encap: gcctiny$(exeext)

tiny.rest.encap:

# FIXME
tiny.install-common: installdirs
	-rm -f $(DESTDIR)$(bindir)/$(GCCTINY_INSTALL_NAME)$(exeext)
	$(INSTALL_PROGRAM) gcctiny$(exeext) $(DESTDIR)$(bindir)/$(GCCTINY_INSTALL_NAME)$(exeext)
	rm -f $(DESTDIR)$(bindir)/$(GCCTINY_TARGET_INSTALL_NAME)$(exeext); \
	( cd $(DESTDIR)$(bindir) && \
      $(LN) $(GCCTINY_INSTALL_NAME)$(exeext) $(GCCTINY_TARGET_INSTALL_NAME)$(exeext) ); \

tiny.install-man:

tiny.install-info:

tiny.install-pdf:

tiny.install-plugin:

tiny.install-html:

tiny.info:

tiny.dvi:

tiny.pdf:

tiny.html:

tiny.uninstall:
	-rm -f gcctiny$(exeext) tiny1$(exeext)
	-rm -f $(tiny_OBJS)

tiny.man:

tiny.mostlyclean:

tiny.clean:

tiny.distclean:

tiny.maintainer-clean:

# The main makefile has already created stage?/tiny.
tiny.stage1: stage1-start
	-mv tiny/*$(objext) stage1/tiny
tiny.stage2: stage2-start
	-mv tiny/*$(objext) stage2/tiny
tiny.stage3: stage3-start
	-mv tiny/*$(objext) stage3/tiny
tiny.stage4: stage4-start
	-mv tiny/*$(objext) stage4/tiny
tiny.stageprofile: stageprofile-start
	-mv tiny/*$(objext) stageprofile/tiny
tiny.stagefeedback: stagefeedback-start
	-mv tiny/*$(objext) stagefeedback/tiny
